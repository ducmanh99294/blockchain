// pages/Checkout.js
import React, { useState } from 'react';
import { useNavigate } from 'react-router-dom';
import '../../assets/css/User/checkout.css';

const Checkout: React.FC = () => {
  const navigate = useNavigate();
  
  // D·ªØ li·ªáu m·∫´u gi·ªè h√†ng
  const [cartItems] = useState([
    {
      id: 1,
      name: "Panadol Extra",
      price: 95000,
      originalPrice: 120000,
      image: "https://via.placeholder.com/60x60/4CAF50/ffffff?text=Panadol",
      quantity: 2,
      prescription: false
    },
    {
      id: 2,
      name: "Vitamin C 1000mg",
      price: 150000,
      originalPrice: 180000,
      image: "https://via.placeholder.com/60x60/FF9800/ffffff?text=Vitamin+C",
      quantity: 1,
      prescription: false
    }
  ]);

  // Th√¥ng tin giao h√†ng
  const [shippingInfo, setShippingInfo] = useState({
    fullName: 'Nguy·ªÖn VƒÉn A',
    phone: '0901234567',
    email: 'nguyenvana@email.com',
    address: '123 ƒê∆∞·ªùng Nguy·ªÖn VƒÉn Linh',
    city: 'Qu·∫≠n 7',
    district: 'TP. H·ªì Ch√≠ Minh',
    ward: 'Ph∆∞·ªùng T√¢n Thu·∫≠n ƒê√¥ng',
    note: ''
  });

  // Ph∆∞∆°ng th·ª©c thanh to√°n
  const [paymentMethod, setPaymentMethod] = useState('cod');
  const [agreeToTerms, setAgreeToTerms] = useState(true);

  // Ph∆∞∆°ng th·ª©c v·∫≠n chuy·ªÉn
  const shippingMethods = [
    {
      id: 'standard',
      name: 'Giao h√†ng ti√™u chu·∫©n',
      price: 15000,
      time: '3-5 ng√†y',
      description: 'Giao h√†ng trong gi·ªù h√†nh ch√≠nh'
    },
    {
      id: 'express',
      name: 'Giao h√†ng nhanh',
      price: 30000,
      time: '1-2 ng√†y',
      description: 'Giao h√†ng h·ªèa t·ªëc'
    }
  ];

  const [selectedShipping] = useState('standard');

  // Ph∆∞∆°ng th·ª©c thanh to√°n
  const paymentMethods = [
    {
      id: 'cod',
      name: 'Thanh to√°n khi nh·∫≠n h√†ng',
      icon: 'üí∞',
      description: 'Tr·∫£ ti·ªÅn m·∫∑t khi nh·∫≠n ƒë∆∞·ª£c h√†ng'
    },
    {
      id: 'momo',
      name: 'V√≠ MoMo',
      icon: 'üì±',
      description: 'Thanh to√°n qua ·ª©ng d·ª•ng MoMo'
    },
    {
      id: 'banking',
      name: 'Chuy·ªÉn kho·∫£n ng√¢n h√†ng',
      icon: 'üè¶',
      description: 'Chuy·ªÉn kho·∫£n qua Internet Banking'
    },
    {
      id: 'visa',
      name: 'Th·∫ª Visa/Mastercard',
      icon: 'üí≥',
      description: 'Thanh to√°n b·∫±ng th·∫ª qu·ªëc t·∫ø'
    }
  ];

  // T√≠nh to√°n t·ªïng ti·ªÅn
  const calculateTotals = () => {
    const subtotal = cartItems.reduce((total, item) => total + (item.price * item.quantity), 0);
    const shippingFee = shippingMethods.find(method => method.id === selectedShipping)?.price || 0;
    const total = subtotal + shippingFee;
    
    return { subtotal, shippingFee, total };
  };

  const { subtotal, shippingFee, total } = calculateTotals();

  // X·ª≠ l√Ω thay ƒë·ªïi th√¥ng tin
  const handleInputChange = (e) => {
    const { name, value } = e.target;
    setShippingInfo(prev => ({
      ...prev,
      [name]: value
    }));
  };

  // X·ª≠ l√Ω ƒë·∫∑t h√†ng
  const handlePlaceOrder = (e) => {
    e.preventDefault();
    
    if (!agreeToTerms) {
      alert('Vui l√≤ng ƒë·ªìng √Ω v·ªõi ƒëi·ªÅu kho·∫£n v√† ƒëi·ªÅu ki·ªán');
      return;
    }

    // T·∫°o ƒë∆°n h√†ng
    const orderData = {
      orderId: `MED${Date.now()}`,
      items: cartItems,
      shippingInfo,
      paymentMethod,
      shippingMethod: selectedShipping,
      totals: calculateTotals(),
      orderDate: new Date().toISOString(),
      status: 'pending'
    };

    // L∆∞u ƒë∆°n h√†ng (trong th·ª±c t·∫ø s·∫Ω g·ªçi API)
    localStorage.setItem('lastOrder', JSON.stringify(orderData));
    
    // Chuy·ªÉn ƒë·∫øn trang x√°c nh·∫≠n
    navigate('/user/orders', { state: orderData });
  };

  // ƒê·ªãnh d·∫°ng ti·ªÅn
  const formatPrice = (price) => {
    return new Intl.NumberFormat('vi-VN').format(price) + 'ƒë';
  };

  return (
    <div className="checkout-page">
      <div className="checkout-container">
        <div className="checkout-header">
          <h1>Thanh To√°n & ƒê·∫∑t H√†ng</h1>
          <div className="checkout-steps">
            <div className="step active">1. Gi·ªè h√†ng</div>
            <div className="step active">2. Thanh to√°n</div>
            <div className="step">3. Ho√†n t·∫•t</div>
          </div>
        </div>

        <form className="checkout-form" onSubmit={handlePlaceOrder}>
          <div className="checkout-content">
            {/* Th√¥ng tin giao h√†ng */}
            <div className="checkout-section">
              <h2>Th√¥ng tin giao h√†ng</h2>
              <div className="form-grid">
                <div className="form-group">
                  <label>H·ªç v√† t√™n *</label>
                  <input
                    type="text"
                    name="fullName"
                    value={shippingInfo.fullName}
                    onChange={handleInputChange}
                    required
                  />
                </div>

                <div className="form-group">
                  <label>S·ªë ƒëi·ªán tho·∫°i *</label>
                  <input
                    type="tel"
                    name="phone"
                    value={shippingInfo.phone}
                    onChange={handleInputChange}
                    required
                  />
                </div>

                <div className="form-group">
                  <label>Email *</label>
                  <input
                    type="email"
                    name="email"
                    value={shippingInfo.email}
                    onChange={handleInputChange}
                    required
                  />
                </div>

                <div className="form-group full-width">
                  <label>ƒê·ªãa ch·ªâ *</label>
                  <input
                    type="text"
                    name="address"
                    value={shippingInfo.address}
                    onChange={handleInputChange}
                    required
                  />
                </div>

                <div className="form-group">
                  <label>Th√†nh ph·ªë *</label>
                  <select
                    name="city"
                    value={shippingInfo.city}
                    onChange={handleInputChange}
                    required
                  >
                    <option value="TP. H·ªì Ch√≠ Minh">TP. H·ªì Ch√≠ Minh</option>
                    <option value="H√† N·ªôi">H√† N·ªôi</option>
                    <option value="ƒê√† N·∫µng">ƒê√† N·∫µng</option>
                    <option value="C·∫ßn Th∆°">C·∫ßn Th∆°</option>
                  </select>
                </div>

                <div className="form-group">
                  <label>Qu·∫≠n/Huy·ªán *</label>
                  <select
                    name="district"
                    value={shippingInfo.district}
                    onChange={handleInputChange}
                    required
                  >
                    <option value="Qu·∫≠n 7">Qu·∫≠n 7</option>
                    <option value="Qu·∫≠n 1">Qu·∫≠n 1</option>
                    <option value="Qu·∫≠n 3">Qu·∫≠n 3</option>
                    <option value="Qu·∫≠n B√¨nh Th·∫°nh">Qu·∫≠n B√¨nh Th·∫°nh</option>
                  </select>
                </div>

                <div className="form-group">
                  <label>Ph∆∞·ªùng/X√£ *</label>
                  <select
                    name="ward"
                    value={shippingInfo.ward}
                    onChange={handleInputChange}
                    required
                  >
                    <option value="Ph∆∞·ªùng T√¢n Thu·∫≠n ƒê√¥ng">Ph∆∞·ªùng T√¢n Thu·∫≠n ƒê√¥ng</option>
                    <option value="Ph∆∞·ªùng T√¢n Thu·∫≠n T√¢y">Ph∆∞·ªùng T√¢n Thu·∫≠n T√¢y</option>
                    <option value="Ph∆∞·ªùng T√¢n Phong">Ph∆∞·ªùng T√¢n Phong</option>
                  </select>
                </div>

                <div className="form-group full-width">
                  <label>Ghi ch√∫ (t√πy ch·ªçn)</label>
                  <textarea
                    name="note"
                    value={shippingInfo.note}
                    onChange={handleInputChange}
                    placeholder="Ghi ch√∫ v·ªÅ ƒë∆°n h√†ng, v·ªã tr√≠ giao h√†ng..."
                    rows="3"
                  />
                </div>
              </div>
            </div>

            {/* Ph∆∞∆°ng th·ª©c thanh to√°n */}
            <div className="checkout-section">
              <h2>Ph∆∞∆°ng th·ª©c thanh to√°n</h2>
              <div className="payment-methods">
                {paymentMethods.map(method => (
                  <label key={method.id} className="payment-method">
                    <input
                      type="radio"
                      name="payment"
                      value={method.id}
                      checked={paymentMethod === method.id}
                      onChange={() => setPaymentMethod(method.id)}
                    />
                    <div className="payment-content">
                      <span className="payment-icon">{method.icon}</span>
                      <div className="payment-info">
                        <span className="payment-name">{method.name}</span>
                        <span className="payment-description">{method.description}</span>
                      </div>
                    </div>
                  </label>
                ))}
              </div>
            </div>

            {/* X√°c nh·∫≠n ƒë∆°n h√†ng */}
            <div className="checkout-section">
              <h2>X√°c nh·∫≠n ƒë∆°n h√†ng</h2>
              <div className="order-review">
                <div className="order-items">
                  {cartItems.map(item => (
                    <div key={item.id} className="order-item">
                      <img src={item.image} alt={item.name} />
                      <div className="item-details">
                        <h4>{item.name}</h4>
                        <p>S·ªë l∆∞·ª£ng: {item.quantity}</p>
                      </div>
                      <div className="item-price">
                        {formatPrice(item.price * item.quantity)}
                      </div>
                    </div>
                  ))}
                </div>

                <div className="order-summary">
                  <div className="summary-row">
                    <span>T·∫°m t√≠nh:</span>
                    <span>{formatPrice(subtotal)}</span>
                  </div>
                  <div className="summary-row">
                    <span>Ph√≠ v·∫≠n chuy·ªÉn:</span>
                    <span>{formatPrice(shippingFee)}</span>
                  </div>
                  <div className="summary-row total">
                    <span>T·ªïng c·ªông:</span>
                    <span>{formatPrice(total)}</span>
                  </div>
                </div>

                <label className="terms-checkbox">
                  <input
                    type="checkbox"
                    checked={agreeToTerms}
                    onChange={(e) => setAgreeToTerms(e.target.checked)}
                  />
                  <span className="checkmark"></span>
                  T√¥i ƒë·ªìng √Ω v·ªõi <a href="#terms">ƒëi·ªÅu kho·∫£n v√† ƒëi·ªÅu ki·ªán</a> c·ªßa MedChain
                </label>
              </div>
            </div>
          </div>

          {/* Thanh to√°n sidebar */}
          <div className="checkout-sidebar">
            <div className="order-summary-card">
              <h3>T√≥m t·∫Øt ƒë∆°n h√†ng</h3>
              
              <div className="summary-items">
                {cartItems.map(item => (
                  <div key={item.id} className="summary-item">
                    <span className="item-name">{item.name} √ó {item.quantity}</span>
                    <span className="item-price">{formatPrice(item.price * item.quantity)}</span>
                  </div>
                ))}
              </div>

              <div className="summary-totals">
                <div className="total-row">
                  <span>T·∫°m t√≠nh:</span>
                  <span>{formatPrice(subtotal)}</span>
                </div>
                <div className="total-row">
                  <span>Ph√≠ v·∫≠n chuy·ªÉn:</span>
                  <span>{formatPrice(shippingFee)}</span>
                </div>
                <div className="total-row grand-total">
                  <span>T·ªïng c·ªông:</span>
                  <span>{formatPrice(total)}</span>
                </div>
              </div>

              <button type="submit" className="place-order-btn">
                ƒê·∫∑t h√†ng
              </button>

              <p className="security-note">
                üîí Thanh to√°n an to√†n. Th√¥ng tin c·ªßa b·∫°n ƒë∆∞·ª£c b·∫£o m·∫≠t.
              </p>
            </div>
          </div>
        </form>
      </div>
    </div>
  );
};

export default Checkout;